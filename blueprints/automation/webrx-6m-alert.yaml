blueprint:
  name: WebRX-6m-alert
  description: Notification and spoken anouncement, when there is activity on the 6 m band.
  domain: automation

  input:
    webrx_ft8:
      name: webrx-ft8
      description: "Select the WebRX MQTT sensor OpenWebRX-FT8"
      selector:
        entity:
          filter:
            - domain: sensor  
    tts-entity:
      name: tts-entity
      description: Select the available text-to-speech entity like 'tts.home_assistant_cloud'
      selector:
        entity:
          filter:
            - domain: tts  

    media-play:
      name: media-player
      description: Select your available media player
      selector:
        entity:
          filter:
            - domain: media_player

# We need these global variables to use them in templates

variables:
  act_ft8:  !input webrx_ft8

trigger_variables:
  tvar_webrx_ft8: !input webrx_ft8

trigger:
  - platform: template
    value_template: >-
      {# Activity on 6 m but not a 9V1 station #} 
      {{
         ((state_attr(tvar_webrx_ft8,'freq') //1000000) == 50 ) and 
         ((((as_timestamp(now()) - 
         (state_attr(tvar_webrx_ft8,'timestamp')|int)/1000))) < 60) and
         ((state_var(tvar_webrx_ft8, 'callsign')| truncate(3,true,'',0)) != '9V1') 
      }}
    id: Activity-6m

action:
  - variables:
      call_spelled: |
        {% from 'macros.jinja' import spell %}
        {{ spell(state_attr(act_ft8, 'callsign')) }}
      loc_spelled: |
        {% from 'macros.jinja' import spell %}
        {{ spell( (state_attr(act_ft8, 'locator'))[0] +
                  (state_attr(act_ft8, 'locator'))[0]   
                ) }}   
      freq: |
        {{ states(act_ft8) | int // 1000 }}
      msg_data: |
        There is activity on the 6 meter band. The station with the call sign {{
        call_spelled }}, in locator field {{ loc_spelled }}, is active.
    
    # Notification 
  - service: notify.notify
    data:
      message: >
        Station {{ state_attr( act_ft8, 'callsign') 
        }} in {{ state_attr( act_ft8, 'locator') }} active on {{
         states(act_ft8) | int //1000 }} MHz!
      title: OpenWebRX
    enabled: true

    # Anouncement
  - service: tts.speak
    target:
      entity_id: !input tts-entity
    data:
      cache: true
      message: >
        {{ msg_data }}
      media_player_entity_id: !input media-play

  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0

mode: single
